"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const luxon_1 = require("luxon");
const Utils_1 = require("../polyfills/Utils");
/**
 * Wrapper class for an astronomical time, mostly used to sort collections of
 * astronomical times.
 *
 * @author &copy; Eliyahu Hershfeld 2007-2011
 * @version 1.0
 */
class Zman {
    constructor(dateOrDuration, label) {
        this.zmanLabel = label;
        if (luxon_1.DateTime.isDateTime(dateOrDuration)) {
            this.zman = dateOrDuration;
        }
        else if (typeof dateOrDuration === 'number') {
            this.duration = dateOrDuration;
        }
    }
    static compareDateOrder(zman1, zman2) {
        if (!zman1.zman || !zman2.zman) {
            throw new RangeError('zman cannot be falsy when comparing');
        }
        return Utils_1.DateUtils.compareTo(zman1.zman, zman2.zman);
    }
    static compareNameOrder(zman1, zman2) {
        return Utils_1.StringUtils.compareTo(zman1.zmanLabel || '', zman2.zmanLabel || '');
    }
    static compareDurationOrder(zman1, zman2) {
        if (!zman1.duration || !zman2.duration) {
            throw new RangeError('Duration cannot be falsy when comparing');
        }
        return Utils_1.IntegerUtils.compare(zman1.duration, zman2.duration);
    }
}
exports.Zman = Zman;
//# sourceMappingURL=Zman.js.map